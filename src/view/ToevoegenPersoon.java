/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.controlPersoonFrameOptie;
import databaseUtil.DataBaseConnector;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Method
 */
public class ToevoegenPersoon extends javax.swing.JFrame {
    ButtonGroup buttonGroup = new ButtonGroup();
    PersoonFrame persoonFrame = new PersoonFrame();
    
    /* REGEX
    
    private String Voornaam;
    private String Tussenvoegsel;
    private String Achternaam;
    private String Straat;
    private String Huisnummer;
    private String Woonplaats;
    private String Geboortedatum;
    private String Sterfdatum;

    private boolean VoornaamIsGoed = false;
    private boolean TussenvoegselIsGoed = false;
    private boolean AchternaamIsGoed = false;
    private boolean StraatIsGoed = false;
    private boolean HuisnummerIsGoed = false;
    private boolean WoonplaatsIsGoed = false;
    private boolean GeboortedatumIsGoed = false;
    private boolean SterfdatumIsGoed = false;
    */
    /**
     * Creates new form ToevoegenPersoon
     */
    public ToevoegenPersoon(PersoonFrame persoonFrame) {
        initComponents();
        this.setTitle("Persoon Toevoegen | Gallerie");
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.persoonFrame = persoonFrame;
        setVisible(true);
        
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
               int a = JOptionPane.showConfirmDialog(null, 
                            "Weet u zeker dat u deze scherm wilt sluiten?", "Scherm sluiten ",
                            JOptionPane.YES_NO_OPTION);
               if(a==JOptionPane.OK_OPTION){
                   dispose(); // Dispose de window
               }
           }
        });
        
        buttonGroup.add(rabKlant);
        buttonGroup.add(rabKunst);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        rabKlant = new javax.swing.JRadioButton();
        rabKunst = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txfVoornaam = new javax.swing.JTextField();
        txfTussenvoegsel = new javax.swing.JTextField();
        txfAchternaam = new javax.swing.JTextField();
        txfWoonplaats = new javax.swing.JTextField();
        txfStraatnaam = new javax.swing.JTextField();
        txfHuisnummer = new javax.swing.JTextField();
        txfGeboortedatum = new javax.swing.JTextField();
        txfSterfdatum = new javax.swing.JTextField();
        btnToevoegen = new javax.swing.JButton();
        lblVnaamMelding = new javax.swing.JLabel();
        lblTussenvoegsel = new javax.swing.JLabel();
        lblAnaamMelding = new javax.swing.JLabel();
        lblGeboortedatum = new javax.swing.JLabel();
        lblWoonplaatsMelding = new javax.swing.JLabel();
        lblStraatMelding = new javax.swing.JLabel();
        lblHuisnummerMelding = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblSterfdatum = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Toevoegen Persoon");

        rabKlant.setText("Klant");
        rabKlant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rabKlantActionPerformed(evt);
            }
        });

        rabKunst.setText("Kunstenaar");
        rabKunst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rabKunstActionPerformed(evt);
            }
        });

        jLabel2.setText("Voornaam");

        jLabel3.setText("Tussenvoegsel");

        jLabel4.setText("Achternaam");

        jLabel5.setText("Woonplaats");

        jLabel6.setText("Straatnaam");

        jLabel7.setText("Huisnummer");

        jLabel8.setText("Geboortedatum");

        jLabel9.setText("Sterfdatum");

        txfVoornaam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfVoornaamKeyReleased(evt);
            }
        });

        txfTussenvoegsel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfTussenvoegselKeyReleased(evt);
            }
        });

        txfAchternaam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfAchternaamKeyReleased(evt);
            }
        });

        txfWoonplaats.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfWoonplaatsKeyReleased(evt);
            }
        });

        txfStraatnaam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfStraatnaamKeyReleased(evt);
            }
        });

        txfHuisnummer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfHuisnummerKeyReleased(evt);
            }
        });

        txfGeboortedatum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfGeboortedatumKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfGeboortedatumKeyReleased(evt);
            }
        });

        txfSterfdatum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfSterfdatumKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfSterfdatumKeyReleased(evt);
            }
        });

        btnToevoegen.setText("Toevoegen");
        btnToevoegen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToevoegenActionPerformed(evt);
            }
        });

        jLabel16.setText("jLabel16");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txfGeboortedatum, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(txfHuisnummer, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfStraatnaam, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfWoonplaats, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfAchternaam, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfTussenvoegsel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfVoornaam, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfSterfdatum))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(lblVnaamMelding)
                                .addGap(26, 26, 26))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAnaamMelding)
                                    .addComponent(lblTussenvoegsel)
                                    .addComponent(lblGeboortedatum)
                                    .addComponent(lblWoonplaatsMelding)
                                    .addComponent(lblStraatMelding)
                                    .addComponent(lblHuisnummerMelding)
                                    .addComponent(jLabel16)
                                    .addComponent(lblSterfdatum))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel1)
                        .addContainerGap(283, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(rabKlant)
                        .addGap(49, 49, 49)
                        .addComponent(rabKunst))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(btnToevoegen)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rabKlant)
                    .addComponent(rabKunst))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txfVoornaam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblVnaamMelding))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txfTussenvoegsel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTussenvoegsel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txfAchternaam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAnaamMelding))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txfWoonplaats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWoonplaatsMelding))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txfStraatnaam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStraatMelding))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txfHuisnummer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHuisnummerMelding))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txfGeboortedatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGeboortedatum)))
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txfSterfdatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSterfdatum))
                .addGap(18, 18, 18)
                .addComponent(btnToevoegen)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rabKlantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rabKlantActionPerformed
        if(rabKlant.isSelected()){
            System.out.println("Klant selected");
            txfWoonplaats.setEnabled(true);
            txfStraatnaam.setEnabled(true);
            txfHuisnummer.setEnabled(true);
            txfGeboortedatum.setEnabled(false);
            txfSterfdatum.setEnabled(false);
        } 
    }//GEN-LAST:event_rabKlantActionPerformed

    private void rabKunstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rabKunstActionPerformed
        if (rabKunst.isSelected()){
            System.out.println("Kunst selected");
            txfWoonplaats.setEnabled(false);
            txfStraatnaam.setEnabled(false);
            txfHuisnummer.setEnabled(false);
            txfGeboortedatum.setEnabled(true);
            txfSterfdatum.setEnabled(true);
        } 
    }//GEN-LAST:event_rabKunstActionPerformed

    private void btnToevoegenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToevoegenActionPerformed
        if(rabKlant.isSelected()){
            if(!checkKlantIsLeeg()) {
                controlPersoonFrameOptie.bevestigingLegeVelden("U mist informatie dat noodzakelijk is.\n Voeg de informatie toe om het proces te voltooien.");
            } else {
                toevoegenPersoon("kl");
                toevoegenKlant();
            }
            
        } else if(rabKunst.isSelected()){
            if(!checkKunstenaarIsLeeg()) {
                controlPersoonFrameOptie.bevestigingLegeVelden("U mist informatie dat noodzakelijk is.\n Voeg de informatie toe om het proces te voltooien.");
            } else if(!checkDatum()) {

                } else{
                toevoegenPersoon("ku");
                toevoegenKunstenaar();
            }
        } else {
            System.out.println("Geen selectie");
            if(!checkKunstenaarIsLeeg())
                controlPersoonFrameOptie.bevestigingLegeVelden("U heeft geen klant of kunstenaar geselecteerd. \nKies een van de opties en vul de velden in om het proces te voltooien.");
        }
    }//GEN-LAST:event_btnToevoegenActionPerformed

    private void txfVoornaamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfVoornaamKeyReleased
        /*String voornaamNietIngevoer = "Maximaal 20 letters, geen cijfers.";

        Pattern voornaamPattern = Pattern.compile("[a-zA-Z ]{0,19}");
        Matcher voornaamMatcher = voornaamPattern.matcher(txfVoornaam.getText());
        boolean voornaamBoolean = voornaamMatcher.matches();

        if (voornaamBoolean == true) {
            Voornaam = this.txfVoornaam.getText().replaceAll("^\\s+|\\s+$", "");
            jLabel16.setText(null);

            VoornaamIsGoed = true;
        } else if (voornaamBoolean == false) {
            jLabel16.setText(voornaamNietIngevoer);

            VoornaamIsGoed = false;
        }*/
    }//GEN-LAST:event_txfVoornaamKeyReleased

    private void txfAchternaamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfAchternaamKeyReleased
        /*String achternaamNietIngevoerd = "Maximaal 45 letters";

        Pattern achternaamPattern = Pattern.compile("[a-zA-Z ]{0,44}");
        Matcher achternaamMatcher = achternaamPattern.matcher(txfAchternaam.getText());
        boolean achternaamBoolean = achternaamMatcher.matches();

        if (achternaamBoolean == true) {
            Achternaam = this.txfAchternaam.getText().replaceAll("^\\s+|\\s+$", "");
            lblAnaamMelding.setText(null);

            AchternaamIsGoed = true;
        } else if (achternaamBoolean == false) {
            lblAnaamMelding.setText(achternaamNietIngevoerd);

            AchternaamIsGoed = false;
        }*/
    }//GEN-LAST:event_txfAchternaamKeyReleased

    private void txfWoonplaatsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfWoonplaatsKeyReleased
        /*String woonplaatsNietIngevoerd = "Maximaal 45 letters";

        boolean woonplaatsBoolean = Pattern.matches("[a-zA-Z ]{0,44}", txfWoonplaats.getText());

        if (woonplaatsBoolean == true) {
            Woonplaats = this.txfWoonplaats.getText().replaceAll("^\\s+|\\s+$", "");
            lblWoonplaatsMelding.setText(null);

            WoonplaatsIsGoed = true;
        } else if (woonplaatsBoolean == false) {
            lblWoonplaatsMelding.setText(woonplaatsNietIngevoerd);

            WoonplaatsIsGoed = false;
        }*/
    }//GEN-LAST:event_txfWoonplaatsKeyReleased

    private void txfStraatnaamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfStraatnaamKeyReleased
        /*String straatNietIngevoerd = "Maximaal 45 letters";

        Pattern straatPattern = Pattern.compile("[a-zA-Z ]{0,44}");
        Matcher straatMatcher = straatPattern.matcher(txfStraatnaam.getText());
        boolean straatBoolean = straatMatcher.matches();

        if (straatBoolean == true) {
            Straat = this.txfStraatnaam.getText().replaceAll("^\\s+|\\s+$", "");
            lblStraatMelding.setText(null);

            StraatIsGoed = true;
        } else if (straatBoolean == false) {
            lblStraatMelding.setText(straatNietIngevoerd);

            StraatIsGoed = false;
        }*/
    }//GEN-LAST:event_txfStraatnaamKeyReleased

    private void txfHuisnummerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfHuisnummerKeyReleased
        /*String HuisnummerNietIngevoerd = "Een huisnummer moet uit cijfers en eventueel letters bestaaan en mag maximaal 45 karakters bevatten.";


        Pattern huisnummerPattern = Pattern.compile("[0-9][0-9a-zA-Z]{0,44}");
        Matcher huisnummerMatcher = huisnummerPattern.matcher(txfHuisnummer.getText());
        boolean huisnummerBoolean = huisnummerMatcher.matches();

        if (huisnummerBoolean == true) {
            Huisnummer = this.txfHuisnummer.getText();
            lblHuisnummerMelding.setText(null);

            HuisnummerIsGoed = true;
        } else if (huisnummerBoolean == false) {
            lblHuisnummerMelding.setText(HuisnummerNietIngevoerd);

            HuisnummerIsGoed = false;
        }*/
    }//GEN-LAST:event_txfHuisnummerKeyReleased

    private void txfTussenvoegselKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfTussenvoegselKeyReleased
        /*String achternaamNietIngevoerd = "Maximaal 45 letters";

        Pattern achternaamPattern = Pattern.compile("[a-zA-Z ]{0,44}");
        Matcher achternaamMatcher = achternaamPattern.matcher(txfTussenvoegsel.getText());
        boolean achternaamBoolean = achternaamMatcher.matches();

        if (achternaamBoolean == true) {
            Achternaam = this.txfTussenvoegsel.getText().replaceAll("^\\s+|\\s+$", "");
            lblTussenvoegsel.setText(null);

            TussenvoegselIsGoed = true;
        } else if (achternaamBoolean == false) {
            lblTussenvoegsel.setText(achternaamNietIngevoerd);

            TussenvoegselIsGoed = false;
        }*/
    }//GEN-LAST:event_txfTussenvoegselKeyReleased

    private void txfGeboortedatumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfGeboortedatumKeyReleased
        /* REGEX String achternaamNietIngevoerd = "Voorbeeld: 1995-10-10. YYYY-MM-DD";

        Pattern achternaamPattern = Pattern.compile("\\d{4}-\\d{2}-\\d{2}");
        Matcher achternaamMatcher = achternaamPattern.matcher(txfGeboortedatum.getText());
        boolean achternaamBoolean = achternaamMatcher.matches();

        if (achternaamBoolean == true) {
            Achternaam = this.txfGeboortedatum.getText().replaceAll("^\\s+|\\s+$", "");
            lblGeboortedatum.setText(null);

            GeboortedatumIsGoed = true;
        } else if (achternaamBoolean == false) {
            lblGeboortedatum.setText(achternaamNietIngevoerd);

            TussenvoegselIsGoed = false;
        }*/
    }//GEN-LAST:event_txfGeboortedatumKeyReleased

    private void txfSterfdatumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfSterfdatumKeyReleased
        /*REGEX String achternaamNietIngevoerd = "Voorbeeld: 1995-10-10. YYYY-MM-DD";

        Pattern achternaamPattern = Pattern.compile("[0-9]{0,10}");
        Matcher achternaamMatcher = achternaamPattern.matcher(txfSterfdatum.getText());
        boolean achternaamBoolean = achternaamMatcher.matches();

        if (achternaamBoolean == true) {
            Achternaam = this.txfSterfdatum.getText().replaceAll("^\\s+|\\s+$", "");
            lblSterfdatum.setText(null);

            SterfdatumIsGoed = true;
        } else if (achternaamBoolean == false) {
            lblSterfdatum.setText(achternaamNietIngevoerd);

            SterfdatumIsGoed = false;
        }REGEX*/
    }//GEN-LAST:event_txfSterfdatumKeyReleased

    private void txfGeboortedatumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfGeboortedatumKeyPressed
        lblGeboortedatum.setText("Voorbeeld: 1995-10-10. YYYY-MM-DD");
    }//GEN-LAST:event_txfGeboortedatumKeyPressed

    private void txfSterfdatumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfSterfdatumKeyPressed
        lblSterfdatum.setText("Voorbeeld: 1995-10-10. YYYY-MM-DD");
    }//GEN-LAST:event_txfSterfdatumKeyPressed

    // Controlle of klant velden leeg zijn / is
    private boolean checkKlantIsLeeg() {
        if(txfVoornaam.getText().isEmpty()){
            return false;
        }
        
        if(txfAchternaam.getText().isEmpty()){
            return false;
        }
        
        if(txfWoonplaats.getText().isEmpty()){
            return false;
        }
        
        if(txfStraatnaam.getText().isEmpty()){
            return false;
        }
        
        if(txfHuisnummer.getText().isEmpty()){
            return false;
        }
        
        return true;
    }
    // Controlle of Kunstenaar velden leeg zijn / is.
    private boolean checkKunstenaarIsLeeg() {
        if(txfVoornaam.getText().isEmpty()){
            return false;
        }
        
        if(txfAchternaam.getText().isEmpty()){
            return false;
        }
        
        if(txfGeboortedatum.getText().isEmpty()){
            return false;
        }
        
        return true;
    }
    // Toevoegen Persoon met type
    private void toevoegenPersoon(String type) {
        String Voornaam = this.txfVoornaam.getText();
        String Tussenvoegsel = this.txfTussenvoegsel.getText();
        String Achternaam = this.txfAchternaam.getText();
        String Type = type;
        /*if (VoornaamIsGoed == false || TussenvoegselIsGoed == false || AchternaamIsGoed == false) {
            JOptionPane.showMessageDialog(this, "Voer alles juist in.");
        } else {*/
            try {
                Connection conn = DataBaseConnector.getConnection();

                String prepStatToevoegenKlant = "INSERT INTO persoon (voornaam, tussenvoegsel, achternaam, type) "
                                                        + "VALUES    (?,           ?,          ?,           ?)";
                PreparedStatement prepStat = conn.prepareStatement(prepStatToevoegenKlant);

                prepStat.setString(1, Voornaam);
                prepStat.setString(2, Tussenvoegsel);
                prepStat.setString(3, Achternaam);
                prepStat.setString(4, Type);

                prepStat.executeUpdate();

            } catch (SQLException exc) {
                JOptionPane.showMessageDialog(this, "Persoon niet opgeslagen in de database" + exc.toString());
            }
        /*} REGEX */
    }
    // Toevoegen klant met laatst gematchde ID
    private void toevoegenKlant() {
        int Persoon_id = getToevoegenKlantInfo();
        String Woonplaats = this.txfVoornaam.getText();
        String Straatnaam = this.txfTussenvoegsel.getText();
        int Huisnummer = Integer.parseInt(this.txfHuisnummer.getText());
        
        /*if (WoonplaatsIsGoed == false || StraatIsGoed == false || HuisnummerIsGoed == false) {
            JOptionPane.showMessageDialog(this, "Voer alles juist in.");
        } else {*/

            try {
                Connection conn = DataBaseConnector.getConnection();

                //                                                      1           2           3           4
                String prepStatToevoegenKlant = "INSERT INTO klant (persoon_id,  woonplaats, straatnaam, huisnummer) "
                                                        + "VALUES    (?,           ?,          ?,          ?)";
                PreparedStatement prepStat = conn.prepareStatement(prepStatToevoegenKlant);

                prepStat.setInt(1, Persoon_id);
                prepStat.setString(2, Woonplaats);
                prepStat.setString(3, Straatnaam);
                prepStat.setInt(4, Huisnummer);

                prepStat.executeUpdate();

            } catch (SQLException exc) {
                JOptionPane.showMessageDialog(this, "Persoon niet opgeslagen in de database" + exc.toString());
            }
            this.setVisible(false);
            this.persoonFrame.vulPersoonTabelMetKlanten();

        /*} REGEX */
    }
    
    // Toevoegen Kunstenaar met laatst gematchde ID
    private boolean toevoegenKunstenaar() {
        int Persoon_id = getToevoegenKlantInfo();
        boolean boolSterfdatum = false;
        
        String Geboortedatum = this.txfGeboortedatum.getText();
        String Sterfdatum = this.txfSterfdatum.getText();

        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-mm-dd");
        /*if (GeboortedatumIsGoed == false || SterfdatumIsGoed == false) {
            JOptionPane.showMessageDialog(this, "Voer alles juist in.");
        } else {*/
            if(!txfSterfdatum.getText().isEmpty()){
                boolSterfdatum = true;

                try {
                    if(!checkDatum())
                        return false;

                    //if(checkDuplicaatKunstenaar())
                    //    return true;
                    
                    Connection conn = DataBaseConnector.getConnection();

                    //                                                      1           2           3           4
                    String prepStatToevoegenKlant = "INSERT INTO kunstenaar (persoon_id,  geboorteDatum, sterfDatum) "
                                                                + "VALUES   (?,           ?,                ?)";
                    PreparedStatement prepStat = conn.prepareStatement(prepStatToevoegenKlant);
                    try {

                    Date dateGeboortedatum = formatter.parse(Geboortedatum);
                    Date dateSterfdatum = formatter.parse(Sterfdatum);

                    java.sql.Date sqlDateGeboortedatum = convertUtilToSql(dateGeboortedatum);
                    java.sql.Date sqlDateSterfdatum = convertUtilToSql(dateSterfdatum);

                    prepStat.setInt(1, Persoon_id);
                    prepStat.setDate(2, sqlDateGeboortedatum);
                    prepStat.setDate(3, sqlDateSterfdatum);

                    prepStat.executeUpdate();

                    } catch(ParseException  e) {
                        e.printStackTrace();
                        return false;
                    }

                } catch (SQLException exc) {
                    JOptionPane.showMessageDialog(this, "Persoon niet opgeslagen in de database" + exc.toString());
                    return false;
                }
                this.setVisible(false);
                this.persoonFrame.vulPersoonTabelMetKunstenaars();
                
                return true;
            } else {
                try {
                    
                    //if(checkDuplicaatKunstenaar())
                    //   return true;
                    
                    Connection conn = DataBaseConnector.getConnection();

                    //                                                      1           2           3           4
                    String prepStatToevoegenKlant = "INSERT INTO kunstenaar (persoon_id,  geboorteDatum, sterfDatum) "
                                                                + "VALUES   (?,           ?,                ?)";
                    PreparedStatement prepStat = conn.prepareStatement(prepStatToevoegenKlant);
                    try {

                    Date dateGeboortedatum = formatter.parse(Geboortedatum);

                    java.sql.Date sqlDateGeboortedatum = convertUtilToSql(dateGeboortedatum);

                    prepStat.setInt(1, Persoon_id);
                    prepStat.setDate(2, sqlDateGeboortedatum);
                    prepStat.setDate(3, null);

                    prepStat.executeUpdate();

                    } catch(ParseException  e) {
                        e.printStackTrace();
                    }

                } catch (SQLException exc) {
                    JOptionPane.showMessageDialog(this, "Persoon niet opgeslagen in de database" + exc.toString());
                        return false;
                }
                this.setVisible(false);
                this.persoonFrame.vulPersoonTabelMetKunstenaars();
                
                return true;
            }
        /*} REGEX */
        
    }
    private static java.sql.Date convertUtilToSql(java.util.Date uDate) {

        java.sql.Date sDate = new java.sql.Date(uDate.getTime());

        return sDate;

    }
    
    private boolean checkDuplicaatKunstenaar() {
        String Voornaam = txfVoornaam.getText();
        String Tussenvoegsel = txfTussenvoegsel.getText();
        String Achternaam = txfAchternaam.getText();
        
        try {
            Connection conn = DataBaseConnector.getConnection();

                String getDuplicaatNaam = "select * from persoon\n" +
                                            "where voornaam = '" + Voornaam +"'"
                                            + "AND tussenvoegsel = '" + Tussenvoegsel +"'"
                                            + "AND achternaam = '" + Achternaam +"'";

                Statement statement = conn.createStatement();
                ResultSet  result = statement.executeQuery(getDuplicaatNaam);
                
                if(result.next()){
                    return true;
                } else {
                    controlPersoonFrameOptie.bevestigingLegeVelden("Er is al een kunstenaar met dezelfde naam in uw verzameling.");
                    return false;
                }
        } catch (SQLException exc){
            JOptionPane.showMessageDialog(this, "Duplicaat schending in de database" + exc.toString());
            return false;
        }
    }
    
    public boolean checkDatum() {
        String Geboortedatum = txfGeboortedatum.getText();
        String Sterfdatum = txfSterfdatum.getText();
        
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        try {
        Date dateGeboortedatum = formatter.parse(Geboortedatum);
        Date dateSterfdatum = formatter.parse(Sterfdatum);
        
        if(dateGeboortedatum.before(dateSterfdatum)) {
            return true;
        } else {
            controlPersoonFrameOptie.bevestigingLegeVelden("Het sterfdatum moet NA het geboortedatum!");
            return false;
        }
        
        } catch (ParseException e){
            e.printStackTrace();
        }
        return false;
    }
    
    // Vinden van recent toegevoegde klant zijn ID.
    private int getToevoegenKlantInfo(){
        try{
            String Voornaam = this.txfVoornaam.getText();
            String Tussenvoegsel = this.txfTussenvoegsel.getText();
            String Achternaam = this.txfAchternaam.getText();
        
            Connection conn = DataBaseConnector.getConnection();
            
            String selectToegevoegdeKlantId = "select max(id) as id from persoon\n" +
                                            "where voornaam = \""+Voornaam+"\" "
                                            + " AND tussenvoegsel = \""+Tussenvoegsel+"\""
                                            + " AND achternaam = \""+Achternaam+"\";";
                    
            Statement statement = conn.createStatement();
            ResultSet result = statement.executeQuery(selectToegevoegdeKlantId);
            
            while(result.next()){
                System.out.println(result.getInt("id"));
                return result.getInt("id");
            }
        } catch (SQLException exc) {
            JOptionPane.showMessageDialog(this, "Persoon niet opgeslagen in de database" + exc.toString());
        }
        
        return 0;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnToevoegen;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblAnaamMelding;
    private javax.swing.JLabel lblGeboortedatum;
    private javax.swing.JLabel lblHuisnummerMelding;
    private javax.swing.JLabel lblSterfdatum;
    private javax.swing.JLabel lblStraatMelding;
    private javax.swing.JLabel lblTussenvoegsel;
    private javax.swing.JLabel lblVnaamMelding;
    private javax.swing.JLabel lblWoonplaatsMelding;
    private javax.swing.JRadioButton rabKlant;
    private javax.swing.JRadioButton rabKunst;
    private javax.swing.JTextField txfAchternaam;
    private javax.swing.JTextField txfGeboortedatum;
    private javax.swing.JTextField txfHuisnummer;
    private javax.swing.JTextField txfSterfdatum;
    private javax.swing.JTextField txfStraatnaam;
    private javax.swing.JTextField txfTussenvoegsel;
    private javax.swing.JTextField txfVoornaam;
    private javax.swing.JTextField txfWoonplaats;
    // End of variables declaration//GEN-END:variables

}
